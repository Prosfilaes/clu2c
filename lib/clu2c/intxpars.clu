% intxpars.clu - convert hexadecimal notation to integer
%
% Copyright (c) 1997
%	Department of Mathematical and Computing Sciences,
%	Tokyo Institute of Technology.  All rights reserved.
%
% $Id: intxpars.clu,v 1.2 1997/02/05 09:55:54 ushijima Exp $


% Equivalent to int$parse except that each digit in S shall be
% hexadecimal.  The letters from 'a' (or 'A') through 'f' (or 'F') are
% used as hexadecimal digits with values from 10 through 15,
% respectively.

int_hex_parse = proc(s: string) returns(int) signals(bad_format, overflow)
    start: int := 1
    sign: int := 1
    c: char := s[1]
	except when bounds:
	    signal bad_format
	end
    if c = '+' | c = '-' then
	start := 2
	if string$size(s) < 2 then
	    signal bad_format
	end
	if c = '-' then
	    sign := -1
	end
    end
    value: int := 0
    for i: int in int$from_to(start, string$size(s)) do
	c := s[i]
	digit: int
	if c >= '0' & c <= '9' then
	    digit := char$c2i(c) - char$c2i('0')
	elseif c >= 'a' & c <= 'f' then
	    digit := char$c2i(c) - char$c2i('a') + 10
	elseif c >= 'A' & c <= 'F' then
	    digit := char$c2i(c) - char$c2i('A') + 10
	else
	    signal bad_format
	end
	value := value * 16 + sign * digit
	    resignal overflow
    end
    return(value)
end int_hex_parse
