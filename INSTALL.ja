CLU2C のインストール方法
************************

[これは INSTALL ファイルの内容を日本語に翻訳したものです。]

  * 基本的なインストール方法
  * コンフィギュレーション
  * MS-DOS にインストールするには
  * 別ディレクトリでコンパイルするには
  * 共通のターゲット
  * Makefile の構造
  * CLU2C の入手方法

基本的なインストール方法
========================

この節では CLU2C を UNIX システムにインストールするための手順を説明し
ます。CLU2C を MS-DOS システムにインストールするための手順については、
`MS-DOS にインストールするには' と題する節を参照してください。ここでは
ソース配布パッケージを展開し、現在トップソースディレクトリにいるものと
します。

  1. `./configure' とタイプしてください。すると `configure' スクリプト
     が実行されます。このスクリプトはいくつかのファイルを作成します。
     たとえば現在の作業ディレクトリに `config.h' および `config.mk' を、
     すべてのディレクトリに `Makefile' を作ります。`configure' スクリ
     プトの詳細については `コンフィギュレーション' と題する節を参照し
     てください。

  2. `make' とタイプしてください。これによってパッケージ全体がコンパイ
     ルされます。

  3. `make install' とタイプしてください。実行可能プログラムが
     `/usr/local/lib/clu2c/bin' に、ヘッダファイルが
     `/usr/local/lib/clu2c/include' に、オブジェクトコードアーカイブお
     よびその他のデータファイルが `/usr/local/lib/clu2c/lib' に、それ
     から 2 つのシェルスクリプトが `/usr/local/bin' にコピーされます。

  4. これはしてもしなくても構いませんが、`make distclean' とタイプする
     と、以上の作業で作成されたファイルはすべて消去されます。

コンフィギュレーション
======================

CLU2C のソース配布パッケージには `configure' と呼ばれるシェルスクリプ
トが添付されています。これはこのパッケージをコンパイルする際に必要とな
る、システムに依存したさまざまなパラメータを自動的に推測します。インス
トールを行なうに当たってまず最初にすべきことはこのスクリプトを実行する
ことです。

システムに依存するパラメータを推測した後で、`configure' は現在のディレ
クトリに `config.h'、`config.mk'、`config.status'、`config.cache'、
`config.log'、および `fakeclu.sh' を作成し、すべてのディレクトリに 
`Makefile' および `Makefile.top' を作成します。

`configure' に対するオプション
------------------------------

`configure' スクリプトは以下のオプションを認識します。これらのオプショ
ンを指定することによってこのスクリプトの動作を制御することができます。

`--prefix=DIRECTORY'
     インストールディレクトリの共通したプリフィックスを DIRECTORY に設
     定します。このオプションを指定しない限り、プリフィックスは
     `/usr/local' に設定されます。

`--srcdir=DIRECTORY'
     このパッケージに対するソースコードがどこにあるのかを `configure' 
     スクリプトに教えます。通常このオプションを指定する必要はありませ
     ん。`configure' スクリプトは自身がどのように呼び出されたかに応じ
     て自動的にソースディレクトリを推測するからです。たとえば 
     `configure' スクリプトを `./configure' と入力することによって呼び
     出した場合には、ソースディレクトリは `.' に設定されます。

`--disable-dynamic-loading'
     ごみ集めを行なう際に、ダイナミックライブラリに関連するデータセグ
     メントを走査することを抑制します。このオプションはかなり古い 
     SunOS (3.x または 4.0.x) を使用する場合には必ず指定しなければなり
     ません。

`--with-bsd-byte-operations'
     標準のメモリ操作 (たとえば `memcpy' および `memcmp' など) が利用
     できる場合でも、BSD のバイト操作 (たとえば `bcopy' および `bcmp' 
     など) を使用します。(NEWS-OS 4.2R では `memcpy' は `bcopy' よりも
     かなり遅いです。)

`--with-clu2c'
     CLU ソースファイルをコンパイルするのに、インストールされた CLU2C 
     システムを使います。CLU2C が既にインストールされているのでなけれ
     ば、このオプションを指定すべきではありません。

`--with-getwd'
     標準の `getcwd' が利用できる場合でも、`getwd' を用いて現在の作業
     ディレクトリを求めるようにします。(SunOS 3.x および 4.x では、
     `getcwd' は `pwd' を呼び出します。)

`--with-gnu-as'
     GNU アセンブラを使用することを宣言します。現時点ではこのオプショ
     ンは Sony CISC NEWS に対してのみ有効です。

`--with-input-code=CODING-SYSTEM'
     ファイル入力に対する標準の符号系を CODING-SYSTEM に設定します。こ
     のオプションを指定しない限り、これは `autoconv' に設定されます。

`--with-output-code=CODING-SYSTEM'
     ファイル出力に対する標準の符号系を CODING-SYSTEM に設定します。こ
     のオプションを指定しない限り、これは `iso-2022-jp' に設定されます。

オプション `--with-input-code' および `--with-output-code' は以下の名
前を符号系の指定として受け付けます。

`noconv'
     符号変換は行なわれません。ファイルはバイト列として扱われます。

`euc-japan'
     日本語 EUC。

`sjis'
     シフトジス。

`iso-2022-jp'
     ISO-2022-JP。この符号系の詳細については `Japanese Character
     Encoding for Internet Messages' (RFC 1468) を参照してください。

`autoconv'
     符号系を自動的に推測します。これは入力用の符号系としてのみ指定す
     ることができます。

あらかじめ `Makefile' の変数を設定するには
------------------------------------------

`Makefile' の変数の中には、環境変数を介してその値を制御できるものがあ
ります。環境変数を用いてあらかじめ設定された値は `configure' が推測し
た値よりも優先されます。たとえば C コンパイラとして `cc' を使いたい場
合には、`configure' を実行する前に環境変数 `CC' の値を `cc' に設定して
おけばよいです。Bourne シェルまたはその子孫を用いる場合には、以下のよ
うにすることができます。

     CC=cc ./configure

あるいは、`env' プログラムが利用できる場合には以下のようにすることがで
きます。

     env CC=cc ./configure

以下の Makefile 変数はこのようにしてあらかじめ値を設定することができま
す。角括弧の中には `configure' が推測する典型的な値が書いてあります。

`CC'
     C コンパイラ。[`gcc' または `cc']

`CFLAGS'
     C コンパイラに対する標準のオプション。[`gcc' に対しては `-O -g'、
     その他の C コンパイラに対しては `-g']

`AS'
     アセンブラ。[`as']

`LIBS'
     プログラムをリンクする際に使用される付加的なライブラリ。[`-lm']

`LDFLAGS'
     C コンパイラに対してリンク時に使用される付加的なオプション。[(空)]

`AR'
     アーカイブとライブラリの維持管理プログラム。[`ar']

`ARFLAGS'
     `ar' に対する標準のフラグ。[`ru']
	
`RANLIB'
     ランダムライブラリへの変換プログラム。[`ranlib' または `:']

MS-DOS にインストールするには
=============================

CLU2C を MS-DOS システムにインストールする方法には 2 つの選択肢があり
ます。おそらくほとんどのユーザはバイナリ配布パッケージを入手してそれを
インストールし、ソースコードをコンパイルすることは避けたいと思うでしょ
う。一方、ソース配布パッケージを入手して、ソースコードをコンパイルする
ことからインストール作業を始めたい人もいるかもしれません。いずれにして
も、CLU2C をインストールする前に DJGPP をインストールしておく必要があ
ります。

必要なソフトウェア
------------------

MS-DOS システム上で動作する CLU2C は DJGPP バージョン 2 (またはそれ以
降) がインストールされていることを要求します。DJGPP は SimTel ミラーサ
イトから匿名 FTP 経由で入手することができます。最低限、以下のファイル
が必要です。

   * `v2/djdevXXX.zip'

   * `v2/readme.1st'

   * `v2gnu/bnuXXXb.zip'

   * `v2gnu/gccXXXb.zip'

   * `v2misc/csdpmi1b.zip'

DJGPP に関する詳細については、`v2/readme.1st' というファイルを参照して
ください。

バイナリ配布パッケージからインストールするには
----------------------------------------------

この項ではバイナリ配布パッケージから MS-DOS システムに CLU2C をインス
トールするための手順を説明します。

  1. DJGPP バージョン 2.00 (またはそれ以降) がインストール済みであり、
     `gcc' が正常に動作することを確認してください。

  2. CLU2C 用のインストールディレクトリを作成してください。デフォルト
     は `c:\clu2c' です (ただしその他のディレクトリを選んでも差し支え
     ありません)。たとえばデフォルトを選択した場合には以下のようにしま
     す。

          mkdir c:\clu2c

  3. 以下のように、上で決めたインストールディレクトリに移動してくださ
     い。

          c:
          cd \clu2c

  4. そのディレクトリでバイナリ配布パッケージを展開してください。たと
     えば、

          lha x SOMEWHERE\clu200b.lzh

     または

          unzip SOMEWHERE\clu200b.zip

     のようにします。

  5. インストールディレクトリとして `c:\clu2c' 以外のディレクトリを選
     んだ場合には、環境変数 `CLU2CROOT' がそのディレクトリを指すように
     設定する必要があります。たとえばインストールディレクトリとして 
     `c:\local\clu2c' を選んだ場合には、以下の行

          set CLU2CROOT=c:\local\clu2c

     を `autoexec.bat' に追加してください。

  6. インストールディレクトリのサブディレクトリ `bin' (たとえば 
     `c:\clu2c\bin') をコマンド検索パスに追加してください。たとえば以
     下の行

          set PATH=c:\clu2c\bin;%PATH%

     を `autoexec.bat' に追加してください。

ソース配布パッケージからインストールするには
--------------------------------------------

この項ではソース配布パッケージから MS-DOS システムに CLU2C をインストー
ルするための手順を説明します。ここではソース配布パッケージを展開し、現
在トップソースディレクトリにいるものとします。

  1. DJGPP バージョン 2.00 (またはそれ以降) がインストール済みであり、
     `gcc'、`ar'、および `ranlib' が正常に動作することを確認してくださ
     い。

  2. CLU2C を構築する際に使用する `make' プログラムが単に `make' と言
     うだけで呼び出されることを確認してください。

  3. `configure' とタイプしてバッチファイル `configure.bat' を実行して
     ください。このバッチファイルはいくつかのファイルを作成します。た
     とえば現在の作業ディレクトリに `config.h' および `config.mk' を、
     すべてのディレクトリに `Makefile' を作ります。しかし、UNIX システ
     ム用の `configure' スクリプトとは違って、`cofigure.bat' はシステ
     ムに依存するパラメータを推測することはしません。その代わりにディ
     レクトリ `config' に置かれている設定ファイルをコピーするだけです。

  4. `config.h' および `config.mk' の内容をざっと確認してください。こ
     れらのファイルは手作業で変更する必要があるかもしれません。
     `config.h' を変更したときにはいつでもこのヘッダを取り込んでいる C 
     ファイルを再コンパイルする必要があります。`config.mk' を変更した
     ときにはいつでも `make mkfiles' を実行して Makefile を作り直さな
     ければなりません。

  5. `make' とタイプしてください。これによってパッケージ全体がコンパイ
     ルされます。

  6. `make install' とタイプしてください。いくつかのファイルがインストー
     ルディレクトリにコピーされます。標準では、実行可能プログラムは 
     `c:\clu2c\bin' に、ヘッダファイルは `c:\clu2c\include' に、オブジェ
     クトコードアーカイブおよびその他のデータファイルは `c:\clu2c\lib' 
     にコピーされます。何も起こらないように見える場合には、ファイル 
     `INSTALL' を何か別の名前、たとえば `INSTALL.doc' に変更してからも
     う一度試してみてください。

  7. バイナリ配布パッケージからインストールする場合と同様に、環境変数 
     `CLU2CROOT' (もし必要であれば) およびコマンド検索パスを設定してく
     ださい。

  8. これはしてもしなくても構いませんが、`make distclean' とタイプする
     と、以上の作業で作成したファイルがすべて消去されます。

私たちは MS-DOS システム用の一般的な Makefile を書くことは難しいと感じ
ています。あなたの環境ではここで述べたようにはうまくゆかないかもしれま
せん。あなたの側に幾らかの努力を期待します。

別ディレクトリでコンパイルするには
==================================

この節では CLU2C を別ディレクトリでコンパイルするための手順を説明しま
す。

  1. あなたが使っている `make' プログラムが `VPATH' 機能を持っているこ
     とを確認してください。

  2. トップソースディレクトリに移動してください。

  3. まだ実行していないのであれば、`configure' スクリプトを実行してく
     ださい。

  4. ソースディレクトリにオブジェクトファイルが存在しないことを確認し
     てください。自信がなければ `make mostlyclean' を実行してください。

  5. `make cfiles' とタイプして CLU ファイルから生成されるべき C ファ
     イルを用意してください。

  6. コンパイル用のディレクトリを用意し、そのディレクトリに移動してく
     ださい。

  7. `configure' スクリプトを実行してください。

以上の作業を終えると、その構築用ディレクトリでコンパイルすることができ
ます。パッケージ全体をコンパイルするには `make' とタイプし、結果として
得られるファイルをインストールするには `make install' とタイプしてくだ
さい。

たとえば、配布パッケージを `/usr/local/src/clu2c-2.0' に展開し、コンパ
イルを `/usr/local/src/clu2c-2.0/build' で実行したい場合には、入力する
指令行は以下のようになるでしょう。

     cd /usr/local/src/clu2c-2.0
     ./configure
     make mostlyclean cfiles
     mkdir build
     cd build
     ../configure
     make

共通のターゲット
================

ほぼすべてのディレクトリの `Makefile' で定義されているターゲットの一覧
を以下に示します。これらのターゲットは現在のディレクトリおよびそのサブ
ディレクトリに再帰的に適用されます。

`all'
     ソースファイルをすべてコンパイルします。ターゲットを指定しなかっ
     た場合にはこのターゲットを指定したことになります。

`install'
     ソースファイルをすべてコンパイルし、結果として得られるものを実際
     に使用するための場所にコピーします。

`clean'
     `make' を実行することによって作成されたファイルをすべて消去します。

`mostlyclean'
     `make' を実行することによって作成されたファイルをほとんどすべて消
     去しますが、CLU ソースファイルから直接または間接に変換された C ファ
     イルは消去しません。

`distclean'
     `configure' および `make' を実行することによって作成されたファイ
     ルをすべて消去します。他にファイルを作っていないのであれば、`make
     distclean' を実行することによってソースツリーは元の内容に戻ります。

`mkfiles'
     `Makefile' を作り直します。ファイル `config.mk' を手動で変更した
     場合にはいつでも `make mkfiles' を実行する必要があります。

`cfiles'
     CLU ソースファイルから直接または間接に変換される C ソースファイル
     を用意します。`make' プログラムの中にはサフィックスルールの連鎖を
     追いそこねるものがあります。特にそれらの `make' は `foo.o' が 
     `foo.c' から作られるものだということは理解していますが、その C ソー
     スファイルが `foo.clu' から作られるものだということに思い当たりま
     せん。この場合には、`make all' を実行する前に `make cfiles' を実
     行しておく必要があります。

Makefile の構造
===============

すべての `Makefile' は実際には 3 つのファイルを連結したものです。

`Makefile.top'
     このファイルは各ディレクトリに存在し、`configure' スクリプトがど
     のように呼び出されたかに応じて変化するような変数定義を含んでいま
     す。`VPATH'、`srcdir'、および `top_srcdir' がこのファイルで定義さ
     れます。このファイルは `configure' スクリプトを実行することによっ
     て自動的に作成されます。

`config.mk'
     このファイルは構築用最上位ディレクトリに存在します。このファイル
     には `configure' スクリプトがどのように呼び出されたかに応じて変化
     し、かつすべての `Makefile' で共有できるような変数定義が含まれて
     います。このファイルは `configure' スクリプトを実行することによっ
     て自動的に作成されます。

`Makefile.unix'
`Makefile.dos'
     これらのファイルのいずれかが `Makefile' の残りの部分を構成します。
     これらのファイルは各ディレクトリに存在します。これらのファイルは
     各ディレクトリに固有であり、変更すべきでないような変数定義および
     規則定義を含んでいます。これらのファイルはソース配布パッケージに
     含まれています。

すべてのディレクトリには `Makefile.in' と呼ばれるファイルがあります。
このファイルはマクロプロセッサ `m4' によって処理され、`Makefile.unix' 
および `Makefile.dos' を生成します。これらのファイルは配布パッケージに
含まれるので、CLU2C をコンパイルするためにマクロプロセッサ `m4' を用意
する必要はない、ということに注意してください。

CLU2C の入手方法
================

最新版 の CLU2C に対するソースおよびバイナリの配布パッケージは匿名 FTP 
経由でホスト `ftp.is.titech.ac.jp' のディレクトリ `pub/clu2c' から入手
することができます。このディレクトリには以下のファイルが置いてあります。

`clu2c-VERSION.tar.gz'
     UNIX システム用のソース配布パッケージです。これらは gzip によって
     圧縮された tar ファイルです。

`cluVERs.lzh'
`cluVERs.zip'
     MS-DOS システム用のソース配布パッケージです。これらは `lha' また
     は `zip' によってアーカイブされたアーカイブファイルです。

`cluVERb.lzh'
`cluVERb.zip'
     MS-DOS システム用のバイナリ配布パッケージです。これらは `lha' ま
     たは `zip' によってアーカイブされたアーカイブファイルです。
