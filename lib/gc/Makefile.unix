

######################################################################
#
# Makefile.unix.  Generated automatically from Makefile.in by m4.
#


#### Variables specific to this directory ####

# Current directory relative to the top-level build directory
curdir = lib/gc

# Top-level build directory
topdir = ../..

# Default flags to the C compiler
DEFAULT_CFLAGS = -I$(topdir) -DALL_INTERIOR_POINTERS -DNO_SIGNALS -DSILENT

# All the flags to the C compiler
ALL_CFLAGS = $(DEFAULT_CFLAGS) $(CFLAGS)

# Archive file
ARCHIVE = ../libclu2c.a


#### Source files ####

# C source files
C_SRC = $(C_SRC_1) $(C_SRC_2) $(C_SRC_3) $(C_SRC_4)
C_SRC_1 = allchblk.c alloc.c blacklst.c checksums.c dbg_mlc.c dyn_load.c
C_SRC_2 = finalize.c headers.c mach_dep.c malloc.c mark.c mark_rts.c
C_SRC_3 = misc.c new_hblk.c obj_map.c os_dep.c ptr_chck.c reclaim.c
C_SRC_4 = sol_threads.c stubborn.c typd_mlc.c

# Miscellaneous source files
MISC_SRC = ChangeLog Makefile.in README BCC_MAKEFILE EMX_MAKEFILE MacOS.c MacProjects.sit.hqx Makefile.gc NT_MAKEFILE OS2_MAKEFILE PCR-Makefile README.Mac README.OS2 README.QUICK README.amiga README.debugging README.gc README.win32 SCoptions.amiga SMakefile.amiga add_gc_prefix.c alpha_mach_dep.s barrett_diagram callprocs gc.h gc.man gc_conf.h gc_cpp.cc gc_cpp.h gc_hdrs.h gc_mark.h gc_priv.h gc_private.h gc_typed.h gcc_support.c if_mach.c if_not_there.c makefile.depend mips_mach_dep.s pc_excludes pcr_interface.c real_malloc.c rs6000_mach_dep.s setjmp_t.c sparc_mach_dep.s test.c test_cpp.cc weakpointer.h

# All the source files
ALL_SRC = $(C_SRC) $(MISC_SRC)


#### Created files ####

# Object files compiled from C source files
C_OBJ = $(C_OBJ_1) $(C_OBJ_2) $(C_OBJ_3) $(C_OBJ_4)
C_OBJ_1 = allchblk.o alloc.o blacklst.o checksums.o dbg_mlc.o dyn_load.o
C_OBJ_2 = finalize.o headers.o mach_dep.o malloc.o mark.o mark_rts.o
C_OBJ_3 = misc.o new_hblk.o obj_map.o os_dep.o ptr_chck.o reclaim.o
C_OBJ_4 = sol_threads.o stubborn.o typd_mlc.o

# All the object files
ALL_OBJ = $(C_OBJ)


#### Variables for source code maintenance ####

# Non-source files included in the distribution
NON_SRC = Makefile.dos Makefile.unix

# All the files included in the distribution
DIST = $(ALL_SRC) $(NON_SRC)

# Default flags to m4
DEFAULT_M4FLAGS = -I$(top_srcdir)/mk

# All the flags to m4
ALL_M4FLAGS = $(DEFAULT_M4FLAGS) $(M4FLAGS)


#### Rules for standard targets ####

# Compiles the entire program
all: archive

# Copies all the products
install:

# Removes installed files
uninstall:

# Makes mostly clean
mostlyclean:
	rm -f archive
	rm -f gctest if_mach if_not_there setjmp_test test.o
	rm -f $(C_OBJ)

# Makes clean
clean:
	rm -f archive
	rm -f gctest if_mach if_not_there setjmp_test test.o
	rm -f $(C_OBJ)

# Makes clean as disributed
distclean:
	rm -f Makefile Makefile.top
	rm -f archive
	rm -f gctest if_mach if_not_there setjmp_test test.o
	rm -f $(C_OBJ)

# Makes really clean
realclean:
	rm -f Makefile Makefile.top
	rm -f archive
	rm -f gctest if_mach if_not_there setjmp_test test.o
	rm -f $(C_OBJ)

# Creates tag file
TAGS:

# Creates info file
info:

# Creates distribution
dist: $(DIST)
	@$(top_srcdir)/config/makedist $(distname) $(curdir) $(DIST)

# Does some check
check: setjmp_test gctest
	./setjmp_test
	./gctest


#### Rules specific to this directory ####

# Creates mach_dep.o
mach_dep.o: $(srcdir)/mach_dep.c $(srcdir)/mips_mach_dep.s $(srcdir)/rs6000_mach_dep.s $(srcdir)/alpha_mach_dep.s $(srcdir)/sparc_mach_dep.s if_mach if_not_there
	rm -f mach_dep.o
	./if_mach MIPS "" $(AS) -o mach_dep.o $(srcdir)/mips_mach_dep.s
	./if_mach RS6000 "" $(AS) -o mach_dep.o $(srcdir)/rs6000_mach_dep.s
	./if_mach ALPHA "" $(AS) -o mach_dep.o $(srcdir)/alpha_mach_dep.s
	./if_mach SPARC SUNOS5 $(AS) -o mach_dep.o $(srcdir)/sparc_mach_dep.s
	./if_not_there mach_dep.o $(CC) $(DEFAULT_CFLAGS) -c $(SPECIALCFLAGS) $(srcdir)/mach_dep.c

# Creates mark_rts.o
mark_rts.o: $(srcdir)/mark_rts.c if_mach if_not_there
	rm -f mark_rts.o
	-./if_mach ALPHA "" $(CC) -c $(ALL_CFLAGS) -Wo,-notail $(srcdir)/mark_rts.c
	./if_not_there mark_rts.o $(CC) -c $(ALL_CFLAGS) $(srcdir)/mark_rts.c

# Creates if_mach
if_mach: $(srcdir)/if_mach.c $(srcdir)/gc_conf.h
	$(CC) $(ALL_CFLAGS) -o if_mach $(srcdir)/if_mach.c

# Creates if_not_there
if_not_there: $(srcdir)/if_not_there.c
	$(CC) $(ALL_CFLAGS) -o if_not_there $(srcdir)/if_not_there.c

# Executes test program
test: check

# Creates gctest
gctest: archive test.o if_mach if_not_there
	rm -f gctest
	./if_mach ALPHA "" $(CC) $(ALL_CFLAGS) -o gctest $(ALPHACFLAGS) test.o $(ARCHIVE)
	./if_mach SPARC SUNOS5 $(CC) $(ALL_CFLAGS) -o gctest  test.o $(ARCHIVE) -lthread -ldl
	./if_mach SPARC DRSNX $(CC) $(ALL_CFLAGS) -o gctest  test.o $(ARCHIVE) -lucb
	./if_not_there gctest $(CC) $(ALL_CFLAGS) -o gctest test.o $(ARCHIVE)

# Creates setjmp_test
setjmp_test: $(srcdir)/setjmp_t.c $(srcdir)/gc.h if_mach if_not_there
	$(CC) $(ALL_CFLAGS) -o setjmp_test $(srcdir)/setjmp_t.c

# Archives object files in this directory
archive: $(ALL_OBJ)
	$(AR) $(ARFLAGS) $(ARCHIVE) $(C_OBJ)
	$(RANLIB) $(ARCHIVE)
	echo archive > archive

# Creates makefiles for this directory and all the subdirectories
mkfiles:
	cat Makefile.top $(topdir)/config.mk $(srcdir)/Makefile.unix > Makefile

# Forces a particular target to be made
always:


#### Suffix rules ####

.SUFFIXES:
.SUFFIXES: .o .c

# Compiles C file to get object file
.c.o:
	$(CC) $(ALL_CFLAGS) -c $<


#### Rules for source code maintenance ####

# Processes m4 files
m4:
	@for os in unix dos; do					\
	    mk=Makefile.$$os;						\
	    echo creating $$mk;						\
	    $(M4) $(ALL_M4FLAGS) -DOSTYPE=$$os Makefile.in >$$mk.new;	\
	    if test ! $$?; then						\
		echo $$mk is unchanged;					\
		rm -f $$mk.new;						\
		exit 1;							\
	    elif cmp -s $$mk $$mk.new 2>/dev/null; then			\
		echo $$mk is unchanged;					\
		rm -f $$mk.new;						\
	    else							\
		rm -f $$mk;						\
		mv $$mk.new $$mk;					\
	    fi;								\
	done

# Creates dos distribution
dosdist: $(DIST)
	@$(top_srcdir)/config/makedist -d $(dos_distname) $(curdir) $(DIST)

# Creates the list of source files
source-list:
	@if [ $(curdir) = . ]; then\
	    cp /dev/null source-list;\
	    for i in $(ALL_SRC); do\
		echo $$i >>source-list;\
	    done;\
	else\
	    for i in $(ALL_SRC); do\
		echo $(curdir)/$$i >>$(topdir)/source-list;\
	    done;\
	fi
